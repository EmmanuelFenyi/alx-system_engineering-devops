#!/usr/bin/env bash

# Function to display information about a specific subdomain
display_subdomain_info() {
    local domain="$1"
    local subdomain="$2"

    # Retrieve DNS information for the specified subdomain
    local dns_info=$(dig +short "$subdomain.$domain" | awk '{ print $1 }')

    # Determine the record type
    local record_type=$(echo "$dns_info" | awk 'NR==1 { print toupper($1) }')

    # Determine the destination
    local destination=$(echo "$dns_info" | awk 'NR>1 { print $1 }')

    # Display information about the subdomain
    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Function to display information about default subdomains
display_default_subdomains_info() {
    local domain="$1"

    # Define default subdomains
    local default_subdomains=("www" "lb-01" "web-01" "web-02")

    # Loop through default subdomains and display information
    for subdomain in "${default_subdomains[@]}"; do
        display_subdomain_info "$domain" "$subdomain"
    done
}

# Main function
main() {
    local domain="$1"
    local subdomain="$2"

    # Display information for default subdomains if no specific subdomain is provided
    if [ -z "$subdomain" ]; then
        display_default_subdomains_info "$domain"
    else
        # Display information for the specified subdomain
        display_subdomain_info "$domain" "$subdomain"
    fi
}

# Check if both domain and subdomain parameters are provided
if [ $# -lt 1 ]; then
    echo "Usage: $0 <domain> [<subdomain>]"
    exit 1
fi

# Call the main function with provided arguments
main "$@"

